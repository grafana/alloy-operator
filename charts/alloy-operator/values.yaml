---
# -- Overrides the chart's name. Used to change the infix in the resource names.
nameOverride: ""
# -- Overrides the chart's computed fullname. Used to change the full prefix of
# resource names.
fullnameOverride: ""

global:
  image:
    # -- Global image registry override.
    # @section -- Image Settings
    registry: ""

    # -- Global image pull secrets.
    # @section -- Image Settings
    pullSecrets: []

# -- How many replicas to use for the Alloy Operator Deployment.
# @section -- Deployment Settings
replicaCount: 1

# -- Restrict the Alloy Operator to only manage Alloy instances in the given list of namespaces.
# @section -- Alloy Management Settings
namespaces: []

# -- Restrict the Alloy Operator to its own namespace only. Overrides the `namespaces` setting.
# @section -- Alloy Management Settings
ownNamespaceOnly: false

# Leader election settings.
leaderElection:
  # -- Whether to enable leader election for the Alloy Operator. This is important when using multiple replicas or
  # when rolling updates. If set to false, you risk having split-brain scenarios where multiple instances of the
  # Alloy Operator try to manage the same Alloy instances.
  # @section -- Leader Election Settings
  enabled: true

# -- Additional arguments to pass to the Alloy Operator.
# @section -- Operator Settings
extraArgs: []

image:
  # -- Alloy Operator image registry
  # @section -- Image Settings
  registry: ghcr.io

  # -- Alloy Operator image repository
  # @section -- Image Settings
  repository: grafana/alloy-operator

  # -- Alloy Operator image tag. When empty, the Chart's appVersion is used.
  # @section -- Image Settings
  tag: ""

  # -- Alloy Operator image digest. If set, will override the tag. Format: sha256:&lt;digest&gt;.
  # @section -- Image Settings
  digest: ""

  # -- The pull policy for images.
  # @section -- Image Settings
  pullPolicy: IfNotPresent

  # -- Optional set of image pull secrets.
  # @section -- Image Settings
  pullSecrets: []

# Service Account settings
serviceAccount:
  # -- Whether to create a service account for the Alloy Operator deployment.
  # @section -- Service Account Settings
  create: true
  # -- Whether the Alloy Operator pod should automatically mount the service account token.
  # @section -- Service Account Settings
  automount: true
  # -- Annotations to add to the service account
  # @section -- Service Account Settings
  annotations: {}
  # -- Additional labels to add to the service account
  # @section -- Service Account Settings
  labels: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # @section -- Service Account Settings
  name: ""

# RBAC settings
rbac:
  # -- Whether to create the necessary RBAC resources for the Alloy Operator.
  # @section -- RBAC Settings
  create: true

  # -- Create ClusterRoles for the Alloy Operator. If set to false, only Roles and RoleBindings will be created. This
  # setting requires the use of `namespaces` or `ownNamespaceOnly` to be set.
  # @section -- RBAC Settings
  createClusterRoles: true

# -- Additional annotations to add to the Alloy Operator pods.
# @section -- Pod Settings
podAnnotations: {}

# -- Additional labels to add to the Alloy Operator pods.
# @section -- Pod Settings
podLabels: {}

# -- Sets the priority class name for the Alloy Operator pods.
# @section -- Pod Settings
priorityClassName: ""

# -- Set the security context for the operator container.
# Set enabled to false to disable security context entirely.
# @section -- Container Settings
securityContext:
  enabled: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]

# -- Set the security context for the Alloy Operator pods.
# Set enabled to false to disable security context entirely.
# @section -- Pod Settings
podSecurityContext:
  enabled: true
  fsGroup: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

service:
  # -- The type of service to create for the operator.
  # @section -- Service
  type: ClusterIP

  health:
    # -- The port number for the health probes.
    # @section -- Service
    port: 8081

  metrics:
    # -- The port number for the metrics service.
    # @section -- Service
    port: 8082

# Sets the resources for the Alloy Operator pods.
resources:
  # -- Set the resource requests for the Alloy Operator pods.
  # @section -- Resources
  requests: {}
  # cpu: 10m
  # memory: 64Mi

  # -- Set the resource limits for the Alloy Operator pods.
  # @section -- Resources
  limits: {}
  # cpu: 500m
  # memory: 128Mi

# -- Liveness probe settings
# @section -- Probes
livenessProbe:
  initialDelaySeconds: 15
  periodSeconds: 20

# -- Readiness probe settings
# @section -- Probes
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10

# -- Set the node selector for the Alloy Operator pods.
# @section -- Pod Settings
nodeSelector:
  kubernetes.io/os: linux

# -- Set the tolerations for the Alloy Operator pods.
# @section -- Pod Settings
tolerations: []

# -- Set the affinity for the Alloy Operator pods.
# @section -- Pod Settings
affinity: {}

serviceMonitor:
  # -- Whether to create a ServiceMonitor
  # @section -- Service Monitor
  enabled: false
  # -- Set of labels to transfer from the Kubernetes Service onto the target
  # @section -- Service Monitor
  additionalLabels: {}
  # -- Set how frequently Prometheus should scrape
  # @section -- Service Monitor
  interval: 60s
  # -- Set timeout for scrape
  # @section -- Service Monitor
  scrapeTimeout: 10s
  # -- Set path to metrics path
  # @section -- Service Monitor
  telemetryPath: /metrics
  # -- Set of labels to transfer from the Kubernetes Service onto the target
  # @section -- Service Monitor
  targetLabels: []
  # -- Set ServiceMonitor metricRelabelings to apply to metrics after scraping.
  # @section -- Service Monitor
  metricRelabelings: []
  # -- Set ServiceMonitor relabelings to apply before scraping.
  # @section -- Service Monitor
  relabelings: []

# Handling of the CustomResourceDefinitions (CRDs)
crds:
  # -- Should this chart deploy the Alloy CRD?
  # @section -- CRDs
  deployAlloyCRD: true

  # -- Should this chart deploy the PodLogs CRD?
  # @section -- CRDs
  deployPodLogsCRD: false
